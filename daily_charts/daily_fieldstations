// fusion table with the 3x3 grid around the 2016 fieldstation points 
var station_points_3x3 = ee.FeatureCollection('ft:1ZGZRl8zMoyLpsf6s1d8NsxNq0DCDS_BNldFPZvUV');

// image collection with the daily ET
var daily_et = ee.ImageCollection('users/ucd-cws-ee-data/ssj-delta-cu/ssj-disalexi/et_daily_output_corr');


//var timeseries = ui.Chart.image.seriesByRegion(daily_et_filter, station_points_3x3, 
//  ee.Reducer.mean(), 'b1', 30, 'system:time_start', 'Station_ID');

//print(timeseries);

// reduce image collection to get statistics of the feature regions
//var reduce_features = 



// adapted from https://code.earthengine.google.com/2bc97f60e4470be64438b52eb8db2781
var reduceRegions_timeseries = daily_et.map(function(image) {
 return image.reduceRegions({
   collection: station_points_3x3.select(['Station_ID']),
    reducer: ee.Reducer.mean(),
    scale: 30
 }).filter(ee.Filter.neq('mean', null))
   .map(function(f) {
      f=f.set('imageId', image.id());
      f=f.set('date', image.date());
      return f;
   });
}).flatten();

// produces feature collection with features containing following columns:
// feature id, imageID, image date, mean
print(reduceRegions_timeseries.limit(1));

// you could drop the .geo column
var reduceRegions_timeseries_out = reduceRegions_timeseries.select(['.*'], null, false);


Export.table.toDrive({
 collection: reduceRegions_timeseries_out,
  description: 'reduceRegions_timeseries_out',
  folder: 'GEE_output',//you can specify folder
 fileFormat: 'CSV'
});

