// function to get the mean value in a polygon from a imageCollection. This is 
// similuar to the ui.Chart.image.seriesByRegion chart but allow more control and 
// exports directly to a csv file. Usage: specify the image collection, fusion table for 
// regions, fusion table column for the group id, the name of the model, the name of the variable
// and the name region. Make sure to kick off the task in the task pane to export the csv to
// to google drive. 

var reduce_SSJ_timeseries = function(imageCol, regionsFC, FCfield, model, variable, region){
  // adapted from https://code.earthengine.google.com/2bc97f60e4470be64438b52eb8db2781
  var reduceRegions_timeseries = imageCol.map(function(image) {
   return image.reduceRegions({
     collection: regionsFC.select([FCfield]),
      reducer: ee.Reducer.mean(),
      scale: 30
   }).filter(ee.Filter.neq('mean', null))
     .map(function(f) {
        f=f.set('imageId', image.id());
        f=f.set('date', image.date());
        f=f.set('model', model);
        f=f.set('variable', variable);
        f=f.set('region', region);
        return f;
     });
  }).flatten();
  
  // produces feature collection with features containing following columns:
  // feature id, imageID, image date, mean, etc
  print(reduceRegions_timeseries.limit(1));
  
  // drop the .geo column
  var reduceRegions_timeseries_out = reduceRegions_timeseries.select(['.*'], null, false);
  
  Export.table.toDrive({
   collection: reduceRegions_timeseries_out,
    description: model+'_'+variable+'_'+region,
    //folder: 'GEE_output',//you can specify folder
   fileFormat: 'CSV'
  });
};

exports = {reduce_SSJ_timeseries: reduce_SSJ_timeseries};